// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
}

datasource db {
    provider     = "postgresql"
    url          = env("DATABASE_URL")
    directUrl    = env("DATABASE_URL_NON_POOLING")
    relationMode = "prisma"
}

// USER(Info, Session)

model User {
    id String @id @unique

    auth_session Session[]
    key          Key[]
    monitors     User_Monitor_Token[]

    // properties
    username String @unique // email
    name     String?

    createdAt DateTime @default(now()) // DB time ...yeah
    updatedAt DateTime @updatedAt // Server time ...yeah
}

model Session {
    id      String @id @unique
    user_id String

    user User @relation(references: [id], fields: [user_id], onDelete: Cascade)

    // properties
    active_expires BigInt
    idle_expires   BigInt

    @@index([user_id])
}

model Key {
    id      String @id @unique
    user_id String

    user User @relation(references: [id], fields: [user_id], onDelete: Cascade)

    // properties
    hashed_password String?

    @@index([user_id])
}

model User_Monitor_Token {
    id         String @id @unique
    user_id    String
    monitor_id String
    token_id   String

    user    User    @relation(references: [id], fields: [user_id])
    project Monitor @relation(references: [id], fields: [monitor_id])
    token   Token   @relation(references: [id], fields: [token_id])

    // properties
    permission PermissionEnum
    
    createdAt DateTime @default(now()) // DB time ...yeah
    updatedAt DateTime @updatedAt // Server time ...yeah

    @@index([user_id])
    @@index([monitor_id])
    @@index([token_id])
}

enum PermissionEnum {
    READ
    WRITE
    ADMIN
}

model Monitor {
    id   String @id @unique
    hash String @unique @default(uuid())

    monitors User_Monitor_Token[]

    // properties
    name        String
    description String?
}

model Token {
    id String @id @unique

    monitors User_Monitor_Token[]

    // properties
    value String
}
