# use the official Bun image
# https://bun.sh/guides/ecosystem/docker
# see all versions at https://hub.docker.com/r/oven/bun/tags (1.0.31-slim)
FROM oven/bun:1.0.31 as base
WORKDIR /usr/src/app

COPY ./.env.example.prod ./.env

# FAILS:
# https://github.com/oven-sh/bun/issues/1751#issuecomment-1757253940 package-lock.json => bun.lockb (bun pm migrate)
# RUN cd /temp/dev && bun pm migrate
# RUN cd /temp/dev && bun install --ignore-scripts --force --no-save || # --production

# install dependencies into temp directory
# this will cache them and speed up future builds
FROM base AS install

RUN mkdir -p /temp/dev
COPY package.json package-lock.json /temp/dev/
COPY prisma /temp/dev/
RUN cd /temp/dev && bun install @prisma/client --ignore-scripts && bunx prisma generate
RUN cd /temp/dev && bun install --ignore-scripts --frozen-lockfile

# install with --production (exclude devDependencies)
# TODO: replace dev with prod | --production flag doesn't work with bun install => causes error
# RUN mkdir -p /temp/prod
# COPY package.json package-lock.json /temp/prod/
# RUN cd /temp/prod && bun install @prisma/client --ignore-scripts --production && bunx prisma generate
# RUN cd /temp/prod && bun install --ignore-scripts --frozen-lockfile --production

# copy node_modules from temp directory
# then copy all (non-ignored) project files into the image
FROM base AS prerelease
COPY --from=install /temp/dev/node_modules node_modules
COPY . .

# [optional] tests & build
ENV NODE_ENV=production

# RUN bun test:unit, test:ui, test:integration
RUN bun run build:bun

RUN cd build/

# copy production dependencies and source code into final image
FROM base AS release
# TODO: replace dev with prod | --from=install /temp/prod/node_modules node_modules
COPY --from=install /temp/dev/node_modules node_modules
COPY --from=prerelease /usr/src/app/build .
# GENERATED BY THE BUILD
# COPY --from=prerelease /usr/src/app/package.json .

# run the app
USER bun
ENV PORT=80
EXPOSE 80/tcp

ENTRYPOINT [ "bun", "run", "start" ]
